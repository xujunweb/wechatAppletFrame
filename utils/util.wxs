var formatMoney = function(money) {
    if (!money) return '0';
    money = money/100;
    money = (+money).toString();
    return money;
}
//保留两位小数
var formatMoney2 = function(money) {
    if (!money) return '0.00';
    money = money/100;
    money = (+money).toFixed(2);
    return money;
}
var strToArry = function(str,type){
  var newtype = type || ','
  return str.split(newtype)
}
var GetTime = function(str, format) {
  var date = getDate(str);
  var Y = date.getFullYear() + '-';
  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
  var D = date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate();
  var hh = (parseInt(date.getHours()) > 9 ? date.getHours() : '0' + date.getHours()) + ':';
  var mm = (parseInt(date.getMinutes()) > 9 ? date.getMinutes() : "0" + date.getMinutes()) + ':';
  var mmEnd = (parseInt(date.getMinutes()) > 9 ? date.getMinutes() : "0" + date.getMinutes());
  var ss = parseInt(date.getSeconds()) > 9 ? date.getSeconds() : '0' + date.getSeconds();

  if (format) {
    if (format == 'Y-M-D hh:mm:ss') {
      return Y + M + D + " " + hh + mm + ss;
    }
    else if (format == 'Y-M-D hh:mm') {
      return Y + M + D + " " + hh + mmEnd;
    }
    else {
      return Y + M + D
    }
  }
  else {
    return Y + M + D
  }
}

var encode = function (_map, content) {
  content = '' + content;
  if (!_map || !content) {
    return content || '';
  }
  var reg = getRegExp('\byyyy|yy|MM|cM|eM|M|dd|d|HH|H|mm|ms|ss|m|s|w|ct|et\b', 'g')
  return content.replace(reg, function (cc) {
    var _result = _map[!_map.i ? cc.toLowerCase() : cc];
    return _result != null ? _result : cc;
  });
}

/**
 * 时间戳转化为日期
 * @return {string} 转化后的日期
 */
var transTime = (function () {
  var getDayPoint = function (time) {
    time.setMinutes(0);
    time.setSeconds(0);
    time.setMilliseconds(0);
    time.setHours(0);
    var today = time.getTime();
    time.setMonth(1);
    time.setDate(1);
    var yearDay = time.getTime();
    return [today, yearDay];
  }
  return function (time, format) {
    var check = getDayPoint(getDate());
    if (format) {
      return dateFormat(time, format)
    }
    if (time >= check[0]) {
      return dateFormat(time, "HH:mm")
    } else if (time < check[0] && time >= check[1]) {
      return dateFormat(time, "MM-dd HH:mm")
    } else {
      return dateFormat(time, "yyyy-MM-dd HH:mm")
    }
  }
})()


/**
 * 日期格式化
 * @return string
 */
var dateFormat = (function () {
  var _map = { i: !0 },
    _12cc = ['上午', '下午'],
    _12ec = ['A.M.', 'P.M.'],
    _week = ['日', '一', '二', '三', '四', '五', '六'],
    _cmon = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'],
    _emon = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
  var _fmtnmb = function (_number) {
    _number = parseInt(_number) || 0;
    return (_number < 10 ? '0' : '') + _number;
  };
  var _fmtclc = function (_hour) {
    return _hour < 12 ? 0 : 1;
  };
  return function (_time, _format, _12time) {
    if (!_time || !_format)
      return '';
    _time = getDate(_time);
    _map.yyyy = _time.getFullYear();
    _map.yy = ('' + _map.yyyy).substring(2);
    _map.M = _time.getMonth() + 1;
    _map.MM = _fmtnmb(_map.M);
    _map.eM = _emon[_map.M - 1];
    _map.cM = _cmon[_map.M - 1];
    _map.d = _time.getDate();
    _map.dd = _fmtnmb(_map.d);
    _map.H = _time.getHours();
    _map.HH = _fmtnmb(_map.H);
    _map.m = _time.getMinutes();
    _map.mm = _fmtnmb(_map.m);
    _map.s = _time.getSeconds();
    _map.ss = _fmtnmb(_map.s);
    _map.ms = _time.getMilliseconds();
    _map.w = _week[_time.getDay()];
    var _cc = _fmtclc(_map.H);
    _map.ct = _12cc[_cc];
    _map.et = _12ec[_cc];
    if (!!_12time) {
      _map.H = _map.H % 12;
    }
    return encode(_map, _format);
  };
})()



module.exports = {
  formatMoney: formatMoney,
  formatMoney2: formatMoney2,
  strToArry: strToArry,
  GetTime: GetTime,
  transTime: transTime,
};